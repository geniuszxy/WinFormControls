<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<<<<<<< HEAD
  <data name="autoScrollTextBox1.Text" xml:space="preserve">
    <value>public class AutoScrollTextBox : TextBox
{
    private bool mScrollbars;

    public AutoScrollTextBox()
    {
        Multiline = true;
        Dock = DockStyle.Fill;
        Font = new System.Drawing.Font("Courier New", 9);
    }

    private void checkForScrollbars()
    {
        if (!IsHandleCreated)
            return;

        bool scroll = false;
        int cnt = this.Lines.Length;
        if (cnt &gt; 1)
        {</value>
=======
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageCheckbox1.NormalState" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiIAAC4iAari3ZIAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8
        AAADV0lEQVRYR82YW4iNURiGxyFnQ5RDSSSHSIqRkJyKkiIl4gIpoUgOpSSnGzURN0pulKi5cSgpkguk
        JCIkpIiSTE6RwzbD+0zvqmF9yZ5m/vaup9nvs9f3/9/+17/X2nuqSqVSRRPKSiKUlUQo6+vri6CTmCDa
        OddFvWQCXNCadBWTxCDnjeKHuOE8WDRGvWQCXNRSuospYobzGFESP8UAuzvil9jkvJkc9ZIJcNH/0E1M
        F+tEmqqngpOvdt7tfMV5uHODSFf0Ji7qJRPgor9pL2aLrWKU3UHByc46j3dm+vraPbJb67zD+brzENGI
        i3rJBLgQFohlfj5TcODPgivHFXtpt1wwZr/zBeexzkxvP7t7dtyH5G3OZTXYQZxw4XyBO+Jc5zzV+avo
        affMbpXzPufLziOdmd6BdhvEGlET9ZIJcBEHei86Cxp+Y7dIMOaQ82nnic7fRW+7x3Y0QJ4suDfHOf9B
        1EsoNfiB4MDHXcy9R/4kWDK4H1/ZLRWMqXU+78xVXSGY5o52/yTqJZQazE3Oyea5+KjzKedpzjx6CBxv
        YrTgajedsFyiXkKpwZz8nWC1592/dZ4reH2YGCHS0tIqRL2EUoN57BE85xM71M/blKiXUEbFRRD1EkoN
        ZhmoceEuwZS/FtV2F+0uOeN5HbfXjkWb4+Dm2K13/ijStnfSrqx1kIJrgnuMKX5hxyeV19P+iltot9L5
        i2Dzxx2zeyi4l+G+XVoh2O6oKbtBSLvIEudvgr0Ud9iOvZe1kqXnll1azPsLrhYu7RyznJvP0k5c1Esm
        gMGGK5e2tat25wRj+ggeuO0Cx0LMvgosRbgtgjGsAml/PmPH1y2O3UW8iHrJBLg40dJ76rbgqrJUPbFj
        u2QMqwKzgUuztDjqJRPgwgQbPe8eUoMcnPzBGfgSgeNvcryOS81Qn47FcXFsjU0u6iUT4MLCiXrJBETF
        RRD1kgmIiosg6iUTEBUXQdRLJiAqLoKol0xAVFwEUS+ZgKi4CKJeMgFRcRFEvWQCouIiiHrJBETFRRD1
        kgnQ4LSlFUlD1EsmQIPT978ieR71kgnQ4PQTskhqo14yARrcS9xtVtzWcK7qqJdMgAanJvnnUPqB3hZw
        7AOCc4W9hLKSCGUlEcrKoVT1G8BwNQI3xKeUAAAAAElFTkSuQmCC
</value>
>>>>>>> 04dca1956c81afb3f69fa8a31e7650d93d3eafe6
  </data>
</root>